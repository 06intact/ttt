
======= input.yul (EVM) =======

Pretty printed source:
object "object" {
    code {
        let a
        let b
        {
            function z() -> y
            { y := calldataload(0) }
            a := z()
        }
        {
            function z(r) -> y
            { y := calldataload(r) }
            b := z(0x70)
        }
        sstore(a, b)
    }
}


Binary representation:
600080600f565b60008035905090565b60156006565b91506026565b600081359050919050565b602e6070601b565b90508082555050

Text representation:
    /* "input.yul":37:42   */
  0x00
    /* "input.yul":51:56   */
  dup1
    /* "input.yul":79:133   */
  jump(tag_2)
tag_1:
    /* "input.yul":95:96   */
  0x00
    /* "input.yul":129:130   */
  dup1
    /* "input.yul":116:131   */
  calldataload
    /* "input.yul":111:131   */
  swap1
  pop
    /* "input.yul":79:133   */
  swap1
  jump	// out
tag_2:
    /* "input.yul":151:154   */
  tag_4
  tag_1
  jump	// in
tag_4:
    /* "input.yul":146:154   */
  swap2
  pop
    /* "input.yul":187:242   */
  jump(tag_6)
tag_5:
    /* "input.yul":204:205   */
  0x00
    /* "input.yul":238:239   */
  dup2
    /* "input.yul":225:240   */
  calldataload
    /* "input.yul":220:240   */
  swap1
  pop
    /* "input.yul":187:242   */
  swap2
  swap1
  pop
  jump	// out
tag_6:
    /* "input.yul":260:267   */
  tag_8
    /* "input.yul":262:266   */
  0x70
    /* "input.yul":260:267   */
  tag_5
  jump	// in
tag_8:
    /* "input.yul":255:267   */
  swap1
  pop
    /* "input.yul":296:297   */
  dup1
    /* "input.yul":293:294   */
  dup3
    /* "input.yul":286:298   */
  sstore
    /* "input.yul":27:304   */
  pop
  pop
