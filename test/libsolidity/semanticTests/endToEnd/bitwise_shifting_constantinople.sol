contract C {
    function shl(uint a, uint b) public returns(uint c) {
        assembly {
            c:= shl(b, a)
        }
    }

    function shr(uint a, uint b) public returns(uint c) {
        assembly {
            c:= shr(b, a)
        }
    }

    function sar(uint a, uint b) public returns(uint c) {
        assembly {
            c:= sar(b, a)
        }
    }
}

// ====
// compileViaYul: also
// ----
// shl(uint256,uint256): 1, 2 -> 4
// shl(uint256,uint256): 115792089237316195423570985008687907853269984665640564039457584007913129639935, 1 -> -2
// shl(uint256,uint256): 115792089237316195423570985008687907853269984665640564039457584007913129639935, 256 -> 0
// shr(uint256,uint256): 3, 1 -> 1
// shr(uint256,uint256): 115792089237316195423570985008687907853269984665640564039457584007913129639935, 1 -> 57896044618658097711785492504343953926634992332820282019728792003956564819967
// shr(uint256,uint256): 115792089237316195423570985008687907853269984665640564039457584007913129639935, 255 -> 1
// shr(uint256,uint256): 115792089237316195423570985008687907853269984665640564039457584007913129639935, 256 -> 0
// sar(uint256,uint256): 3, 1 -> 1
// sar(uint256,uint256): 115792089237316195423570985008687907853269984665640564039457584007913129639935, 1 -> -1
// sar(uint256,uint256): 115792089237316195423570985008687907853269984665640564039457584007913129639935, 255 -> -1
// sar(uint256,uint256): 115792089237316195423570985008687907853269984665640564039457584007913129639935, 256 -> -1
