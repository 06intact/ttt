contract C {
    function shl(uint a, uint b) public returns(uint c) {
        assembly {
            c: = shl(b, a)
        }
    }

    function shr(uint a, uint b) public returns(uint c) {
        assembly {
            c: = shr(b, a)
        }
    }

    function sar(uint a, uint b) public returns(uint c) {
        assembly {
            c: = sar(b, a)
        }
    }
}

// ====
// compileViaYul: also
// ----
shl(uint256, uint256): "1, 2"
shl(uint256, uint256): "115792089237316195423570985008687907853269984665640564039457584007913129639935, 1"
shl(uint256, uint256): "115792089237316195423570985008687907853269984665640564039457584007913129639935, 256"
shr(uint256, uint256): "3, 1"
shr(uint256, uint256): "115792089237316195423570985008687907853269984665640564039457584007913129639935, 1"
shr(uint256, uint256): "115792089237316195423570985008687907853269984665640564039457584007913129639935, 255"
shr(uint256, uint256): "115792089237316195423570985008687907853269984665640564039457584007913129639935, 256"
sar(uint256, uint256): "3, 1"
sar(uint256, uint256): "115792089237316195423570985008687907853269984665640564039457584007913129639935, 1"
sar(uint256, uint256): "115792089237316195423570985008687907853269984665640564039457584007913129639935, 255"
sar(uint256, uint256): "115792089237316195423570985008687907853269984665640564039457584007913129639935, 256"
